name: Release Binaries

on:
  push:
    tags:
      - 'v*'  # 태그가 'v'로 시작하는 경우에만 트리거 됩니다.

permissions:
  contents: write

jobs:
  build:
    name: Build and Release Binaries
    runs-on: ${{ matrix.target.runs-on }}
    strategy:
      matrix:
        target: 
          - runs-on: ubuntu-latest
            triplet: x86_64-unknown-linux-gnu
          - runs-on: ubuntu-latest
            triplet: aarch64-unknown-linux-gnu
          - runs-on: macos-latest
            triplet: aarch64-apple-darwin

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target.triplet }}

    - name: Install Cross for cross-compilation
      run: cargo install cross

    - name: Build for ${{ matrix.target.triplet }}
      run: cross build --release --target ${{ matrix.target.triplet }}

    - name: Upload binary
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.target.triplet }}-binary
        path: target/${{ matrix.target.triplet }}/release/kubectl-check

    - name: Publish to crates.io
      run: cargo publish
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download binaries
      uses: actions/download-artifact@v4
      with:
        pattern: '*-binary'

    - name: Compress Release Assets
      run: |
        directories=(
          "x86_64-unknown-linux-gnu-binary"
          "aarch64-unknown-linux-gnu-binary"
          "aarch64-apple-darwin-binary"
        )

        # 각 디렉토리를 순회하며 tar.gz로 묶기
        for dir in "${directories[@]}"; do
          # tar.gz 파일명 설정
          tar_file="${dir}.tar.gz"
  
          # 디렉토리가 존재하는지 확인
          if [ -d "$dir" ]; then
            echo "Compressing $dir to $tar_file"
            tar -czvf "$tar_file" "$dir"
          else
            echo "Directory $dir does not exist, skipping."
          fi
        done

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        generate_release_notes: true
        files: |
          x86_64-unknown-linux-gnu-binary.tar.gz
          aarch64-unknown-linux-gnu-binary.tar.gz
          aarch64-apple-darwin-binary.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
